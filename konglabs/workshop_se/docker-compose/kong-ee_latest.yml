version: '2.1'

volumes:
    kong_data: {}

networks:
  kong-net:
services:
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong-ee:latest}"
    command: kong migrations bootstrap
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    links:
      - db:db
    networks:
      - kong-net
    restart: on-failure
  kong-migrations-up:
    image: "${KONG_DOCKER_TAG:-kong-ee:latest}"
    command: kong migrations up
    depends_on:
      db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    links:
      - db:db
    networks:
      - kong-net
    restart: on-failure
  kong:
    image: kong-ee
    user: "${KONG_USER:-root}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - KONG_PG_DATABASE=${KONG_PG_DATABASE:-kong}
      - KONG_PG_PASSWORD=${KONG_PG_PASSWORD:-kong}
      - KONG_PG_USER=${KONG_PG_USER:-kong}
    #   - KONG_ENFORCE_RBAC=on
    #   - KONG_ADMIN_GUI_AUTH=basic-auth
      - KONG_AUDIT_LOG=on
      - KONG_LOG_LEVEL=debug
      - KONG_PORTAL_GUI_HOST=$KONG_PORTAL_GUI_HOST
      - KONG_PORTAL_GUI_PROTOCOL=http
      - KONG_PORTAL=on
    #   - KONG_PORTAL_AUTH=openid-connect
    #   - KONG_PORTAL_AUTH=basic-auth
      - KONG_PORTAL_AUTH_CONF=${KONG_PORTAL_AUTH_CONF}
      - KONG_ADMIN_GUI_URL=$KONG_GUI
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_CASSANDRA_CONTACT_POINTS=db
      - KONG_LICENSE_DATA=$KONG_LICENSE_DATA
      - KONG_VITALS=on
      - KONG_ANONYMOUS_REPORTS=off
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_ADMIN_GUI_LISTEN=0.0.0.0:8002, 0.0.0.0:8445 ssl
      - KONG_PORTAL_GUI_LISTEN=0.0.0.0:8003, 0.0.0.0:8446 ssl
      - KONG_PORTAL_API_LISTEN=0.0.0.0:8004, 0.0.0.0:8447 ssl
      - KONG_PORTAL_EMAILS_FROM=training@apim.eu
      - KONG_PORTAL_EMAILS_REPLY_TO=training@apim.eu
      - KONG_SMTP_MOCK=off
      - KONG_SMTP_HOST=mail.datental.de
      - KONG_SMTP_PORT=587
      - KONG_SMTP_AUTH_TYPE=plain
      - KONG_SMTP_STARTTLS=on
      - KONG_SMTP_USERNAME=training@apim.eu
      - KONG_SMTP_PASSWORD=KongRul3z!
      - KONG_SMTP_ADMIN_EMAILS=training@apim.eu
      - KONG_VITALS_STRATEGY=database # or 'influxdb' or 'prometheus' or 'database'
      - KONG_VITALS_TSDB_ADDRESS=prometheus:9090
      - KONG_VITALS_STATSD_ADDRESS=statsd_exporter:9125
      - KONG_PROXY_URL=$KONG_8000
      - KONG_ADMIN_API_URI=$KONG_8001
      - KONG_PORTAL_API_URL=$KONG_PORTAL_API_URL
    networks:
      - kong-net
    ports:
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8003:8003
      - 8004:8004
      - 8443:8443
      - 8444:8444
      - 8445:8445
      - 8446:8446
      - 8447:8447
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
  db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data